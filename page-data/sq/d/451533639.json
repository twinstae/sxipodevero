{"data":{"allMdx":{"nodes":[{"fields":{"slug":"/C/","title":"C"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/Design을 왜 설계라고 번역할까?/","title":"Design을 왜 설계라고 번역할까?"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/Express/","title":"Express"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/HTTP 메서드 method/","title":"HTTP 메서드 Method"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/HTTP/","title":"HTTP"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/JSON JavaScript Object Notation/","title":"JSON JavaScript Object Notation"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/JVM Java Virtual Machine/","title":"JVM Java Virtual Machine"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/MySQL/","title":"MySQL"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/N+1 문제/","title":"N+1 문제"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/Nest/","title":"Nest"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/Next.js/","title":"Next.js"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/Real MySQL/","title":"Real MySQL"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/SPA vs MPA/","title":"SPA vs MPA"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/SQL 인덱스/","title":"SQL 인덱스"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/SQL/","title":"SQL"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/Starllete/","title":"Starllete"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/Wrapping/","title":"Wrapping"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/vue3가 composition api를 도입하다/","title":"Vue3가 Composition Api를 도입하다"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/개발자는 어떤 책임을 지는가/","title":"개발자는 어떤 책임을 지는가"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/객체 관계 맵퍼 ORM/","title":"객체 관계 맵퍼 ORM"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/객체지향 Object Oriented/","title":"객체지향 Object Oriented"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/검색엔진 Search Engine/","title":"검색엔진 Search Engine"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/계산과 효과의 분리/","title":"계산과 효과의 분리"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/고급 언어 High Level Language/","title":"고급 언어 High Level Language"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/관계형 데이터베이스 Relational Database/","title":"관계형 데이터베이스 Relational Database"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/구글 Google/","title":"구글 Google"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/구글 클라우드 플랫폼 GCP/","title":"구글 클라우드 플랫폼 GCP"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/구현체 Implementation/","title":"구현체 Implementation"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/귀납 Induction/","title":"귀납 Induction"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/깃 Git/","title":"깃 Git"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/네이티브 앱 Native App/","title":"네이티브 앱 Native App"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/네트워크 분석 Network Analysis/","title":"네트워크 분석 Network Analysis"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/네트워크 지연 Network Delay/","title":"네트워크 지연 Network Delay"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/네트워킹과 웹 성능 최적화 기법/","title":"네트워킹과 웹 성능 최적화 기법"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/노드.js Node.js/","title":"노드.js Node.js"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/느긋한, 게으른 lazy/","title":"느긋한, 게으른 Lazy"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/단위 테스트보다 통합 테스트 위주로 프런트엔드를 테스트하자/","title":"단위 테스트보다 통합 테스트 위주로 프런트엔드를 테스트하자"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/단일 페이지 애플리케이션 SPA/","title":"단일 페이지 애플리케이션 SPA"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/단축키 Short Cut/","title":"단축키 Short Cut"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/데스크탑 Desktop/","title":"데스크탑 Desktop"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/데이터 Data/","title":"데이터 Data"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/데이터베이스 Database/","title":"데이터베이스 Database"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/데이터베이스 테스트/","title":"데이터베이스 테스트"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/데이터베이스 형상관리 도구/","title":"데이터베이스 형상관리 도구"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/데이터와 로직의 분리/","title":"데이터와 로직의 분리"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/도구 tooling/","title":"도구 Tooling"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/도메인 모델링 Domain Modeling/","title":"도메인 모델링 Domain Modeling"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/디자인 시스템/","title":"디자인 시스템"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/라이브러리 Library/","title":"라이브러리 Library"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/러스트 Rust/","title":"러스트 Rust"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/런타임 vs 컴파일 타임 runtime vs compile time/","title":"런타임 vs 컴파일 타임 Runtime vs Compile Time"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/리스크립트 Rescript/","title":"리스크립트 Rescript"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/리스프 Lisp/","title":"리스프 Lisp"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/리액트 React/","title":"리액트 React"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/리졸버 Resolver/","title":"리졸버 Resolver"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/마이크로서비스 Micro Service/","title":"마이크로서비스 Micro Service"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/마크다운 Markdown/","title":"마크다운 Markdown"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/마크업 Markup/","title":"마크업 Markup"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/만들면서 배우는 클린 아키텍처/","title":"만들면서 배우는 클린 아키텍처"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/메모이제이션 Memoization/","title":"메모이제이션 Memoization"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/멱등성 idempotent/","title":"멱등성 Idempotent"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/명령 질의 책임 분리 CQRS/","title":"명령 질의 책임 분리 CQRS"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/명시적으로 허용하지 않은 기능은 사용할 수 없다/","title":"명시적으로 허용하지 않은 기능은 사용할 수 없다"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/모나드 Monad/","title":"모나드 Monad"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/모델 기반 테스트 Model Based Test/","title":"모델 기반 테스트 Model Based Test"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/모듈 번들러 Module Bundler/","title":"모듈 번들러 Module Bundler"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/모바일 Mobile/","title":"모바일 Mobile"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/무결성 Integrity/","title":"무결성 Integrity"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/문서화 Documentation/","title":"문서화 Documentation"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/물은 H2O인가?/","title":"물은 H2O인가?"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/반응형 상태 관리 Reactive State Management/","title":"반응형 상태 관리 Reactive State Management"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/백엔드 Backend/","title":"백엔드 Backend"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/범주론 Category Theory/","title":"범주론 Category Theory"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/병렬성 Parallelism/","title":"병렬성 Parallelism"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/보안 Security/","title":"보안 Security"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/부수효과 Side Effect/","title":"부수효과 Side Effect"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/분산형 Distributed/","title":"분산형 Distributed"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/불변 Immutable/","title":"불변 Immutable"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/불변식 Constraint/","title":"불변식 Constraint"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/비동기 Asynchronous/","title":"비동기 Asynchronous"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/비트 vite/","title":"비트 Vite"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/사용자 인터페이스 UI/","title":"사용자 인터페이스 UI"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/서버 사이드 렌더링 SSR Server Side Rendering/","title":"서버 사이드 렌더링 SSR Server Side Rendering"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/서버리스 Serverless/","title":"서버리스 Serverless"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/선언적 Declarative/","title":"선언적 Declarative"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/성공으로 이끄는 팀 개발 실천기술/","title":"성공으로 이끄는 팀 개발 실천기술"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/성능 performance/","title":"성능 Performance"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/수동 테스트 Manual Test/","title":"수동 테스트 Manual Test"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/순수 함수 Pure Function/","title":"순수 함수 Pure Function"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/스레드 Thread/","title":"스레드 Thread"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/스벨트 Svelte/","title":"스벨트 Svelte"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/스키마 Schema/","title":"스키마 Schema"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/신뢰할 수 있는 소프트웨어 출시/","title":"신뢰할 수 있는 소프트웨어 출시"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/실용주의 프로그래머 Programatic Programmer/","title":"실용주의 프로그래머 Programatic Programmer"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/실행 환경 Running Environment/","title":"실행 환경 Running Environment"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/아마존 웹 서비스 AWS/","title":"아마존 웹 서비스 AWS"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/알고리즘 Algorithm/","title":"알고리즘 Algorithm"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/애플리케이션 Application/","title":"애플리케이션 Application"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/얼랭 Erlang/","title":"얼랭 Erlang"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/연역 Deduction/","title":"연역 Deduction"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/오픈소스 Open Source/","title":"오픈소스 Open Source"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/오픈소스에 기여하기/","title":"오픈소스에 기여하기"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/웹 Web/","title":"웹 Web"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/웹 뷰 Web View/","title":"웹 뷰 Web View"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/웹 서버 Web Server/","title":"웹 서버 Web Server"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/웹 표준 Web Standard/","title":"웹 표준 Web Standard"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/웹이 UI의 표준이 되어간다/","title":"웹이 UI의 표준이 되어간다"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/웹팩 webpack/","title":"웹팩 Webpack"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/유일성 Unique/","title":"유일성 Unique"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/유한 상태 기계 Finite State Machine/","title":"유한 상태 기계 Finite State Machine"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/의존성 Dependency/","title":"의존성 Dependency"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/의존성 주입 Dependency Injection/","title":"의존성 주입 Dependency Injection"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/이벤트 소싱 Event Sourcing/","title":"이벤트 소싱 Event Sourcing"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/이벤트 주도 Event Driven/","title":"이벤트 주도 Event Driven"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/이산수학/","title":"이산수학"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/익스트림 프로그래밍 XP/","title":"익스트림 프로그래밍 XP"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/인메모리 in memory/","title":"인메모리 in Memory"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/인증 Authentication/","title":"인증 Authentication"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/인터페이스 Interface/","title":"인터페이스 Interface"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/인터프리터 Interpreter/","title":"인터프리터 Interpreter"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/인포메이션 아키텍처/","title":"인포메이션 아키텍처"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/일렉트론 Electron/","title":"일렉트론 Electron"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/자동 생성 Auto Generation/","title":"자동 생성 Auto Generation"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/자료구조 Data Structure/","title":"자료구조 Data Structure"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/자바스크립트 Javascript/","title":"자바스크립트 Javascript"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/자연석 글쓰기/","title":"자연석 글쓰기"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/자연어 처리 Natural Language Processing/","title":"자연어 처리 Natural Language Processing"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/자원 Resource/","title":"자원 Resource"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/장애 극복 Failover/","title":"장애 극복 Failover"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/잼스택 JamStack/","title":"잼스택 JamStack"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/점진적 웹 애플리케이션 PWA/","title":"점진적 웹 애플리케이션 PWA"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/접근성 Accessibility/","title":"접근성 Accessibility"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/정적 vs 동적 static vs dynamic/","title":"정적 vs 동적 Static vs Dynamic"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/정적 사이트 생성 SSG Static Site Generation/","title":"정적 사이트 생성 SSG Static Site Generation"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/정적 타입 vs 동적 타입/","title":"정적 타입 vs 동적 타입"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/주장이 약한 Unopinionated 라이브러리란?/","title":"주장이 약한 Unopinionated 라이브러리란?"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/직렬화 Serialize/","title":"직렬화 Serialize"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/참조 투명성 reference transparency/","title":"참조 투명성 Reference Transparency"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/책 Book/","title":"책 Book"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/체계 System/","title":"체계 System"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/추론주의 의미론/","title":"추론주의 의미론"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/캐싱 caching/","title":"캐싱 Caching"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/클라우드 Cloud/","title":"클라우드 Cloud"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/컴포넌트 Component/","title":"컴포넌트 Component"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/클라이언트 Client/","title":"클라이언트 Client"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/클로저 Clojure/","title":"클로저 Clojure"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/타입 Type/","title":"타입 Type"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/타입스크립트 TypeScript/","title":"타입스크립트 TypeScript"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/테스트 자동화 Test Automation/","title":"테스트 자동화 Test Automation"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/테스트 주도 개발 Test Driven Development/","title":"테스트 주도 개발 Test Driven Development"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/테스트 케이스 Test Case/","title":"테스트 케이스 Test Case"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/테스트 트로피 Test Trophy/","title":"테스트 트로피 Test Trophy"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/테스트 피라미드 Test Pyramid/","title":"테스트 피라미드 Test Pyramid"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/통계학 Statistics/","title":"통계학 Statistics"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/파이썬 알고리즘 인터뷰/","title":"파이썬 알고리즘 인터뷰"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/파일 시스템 File System/","title":"파일 시스템 File System"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/판단과 실행의 분리/","title":"판단과 실행의 분리"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/펑터 Functor/","title":"펑터 Functor"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/페이스북 Facebook/","title":"페이스북 Facebook"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/평가 evaluation/","title":"평가 Evaluation"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/표상하기와 개입하기/","title":"표상하기와 개입하기"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/표현식 vs 구문 expression vs statement/","title":"표현식 vs 구문 Expression vs Statement"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/프런트엔드 Frontend/","title":"프런트엔드 Frontend"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/프레임워크 Framework/","title":"프레임워크 Framework"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/프레임워크 없는 프런트엔드 개발/","title":"프레임워크 없는 프런트엔드 개발"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/프레임워크와 라이브러리의 차이/","title":"프레임워크와 라이브러리의 차이"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/프로그래머의 뇌/","title":"프로그래머의 뇌"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/프로그래밍 언어 Programming Language/","title":"프로그래밍 언어 Programming Language"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/처음 배우는 엘릭서 프로그래밍/","title":"처음 배우는 엘릭서 프로그래밍"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/프로토콜 Protocol/","title":"프로토콜 Protocol"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/플러그인 Plugin/","title":"플러그인 Plugin"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/하스켈 브룩스 커리 Haskell Brooks Curry/","title":"하스켈 브룩스 커리 Haskell Brooks Curry"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/학습하는 조직/","title":"학습하는 조직"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/합성 Composition/","title":"합성 Composition"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/해시 Hash/","title":"해시 Hash"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/호환성 compatibility/","title":"호환성 Compatibility"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/힌들리 밀너 추론/","title":"힌들리 밀너 추론"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/도커 Docker/","title":"도커 Docker"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/7가지 동시성 모델/","title":"7가지 동시성 모델"},"frontmatter":{"draft":false},"rawBody":"[[동시성 Concurrency]]을 다루는 7가지 모델을 소개하는 [[책 Book]]\n\n"},{"fields":{"slug":"/@testing-library/","title":"@Testing-Library"},"frontmatter":{"draft":false},"rawBody":"테스팅 라이브러리는 kent c dodd 가 만든 [[접근성 Accessibility]] 기반으로 [[웹 Web]] [[사용자 인터페이스 UI]]를 테스트할 수 있는 [[라이브러리 Library]] 다."},{"fields":{"slug":"/API Application Programming Interface/","title":"API Application Programming Interface"},"frontmatter":{"draft":false},"rawBody":"[[인터페이스 Interface]] 중에서도 특정 프로그램이 다른 프로그램 개발을 위해 공개하는 걸 말한다. 보통 함수나, 객체, http endpoint 같은 형태를 가지고 있다. 예를 들어 파일을 읽고 쓰는 것 같은 기능을 제공하고 운영체제의 File System API라던가. 프런트엔드 개발을 위한 웹 API나 브라우저 API 등이 있다."},{"fields":{"slug":"/API에 동사를 쓰자/","title":"API에 동사를 쓰자"},"frontmatter":{"draft":false},"rawBody":"특히 [[REST REpresentational State Transfer|REST]] [[API Application Programming Interface]]에서는 url에 명사만 쓰라 하는데, 일반적인 함수나 메서드처럼 api에 자연스러운 [[도메인 주도 설계 DDD|도메인]]의 동사를 쓰자는 주장이다.\n\nhttp가 원래 html 파일 같은 자원을 전송하기 위해 만들어졌지만. api 가 복잡해지면서 단순한 [[CRUD Create Read Update Delete|CRUD]]에 대응되지 않는 동작이 많아졌다. \"[[도메인 주도 설계에서는 CRUD로 모델링하는 걸 싫어한다]]\"는 것과 연결되니 해당 항목의 예시를 참조하자.\n\n그래서 점점 [[RPC Remote Procedure Call]]로 api 서버를 바라보는 사람이 늘어나기 시작했다. api는 서버에 있는 함수를 호출하는 것일 뿐이라는 것이다. 비슷하게 [[GraphQL]] 생태계에서도 api에 동사를 쓰는 걸 자연스럽게 생각한다.\n\n하지만 이를 꼭 [[gRPC]]나 [[GraphQL]] 같이 특이한 기술을 써야 하는 건 아니다. 기존 웹 API에서도 얼마든지 동사를 쓸 수 있고. 그래서 이를 지지하는 분들은 REST API 대신 [[HTTP]] API 라는 표현을 쓰신다.\n\n\n> Are you thinking to yourself, POST to _/add_batch_? That’s not very RESTful! You’re quite right. We’re being happily sloppy, but if you’d like to make it all more RESTy, maybe a POST to _/batches_, then knock yourself out!\n> [Architecture Patterns with Python](https://www.cosmicpython.com/book/chapter_05_high_gear_low_gear.html#_carrying_the_improvement_through_to_the_e2e_tests)\n\n> 검색 API를 디자인 하며 이거 이상하다고 느꼈고, 얼마 후 고통스럽게 TDD를 하고있는 나를 발견해 이거 함정이란 걸 깨달아 CQRS를 배웠다. 나는 미친 종교를 바로 탈출했고 조금의 죄책감도 없이 도메인 모델의 풍부한 동사들을 사용해 직관적인 API 경로를 디자인 했다. - [이규원 - 강남언니CTO](https://twitter.com/gyuwon_yi/status/1387765460691832835)\n\n> api 에서 수행할 동작을 잘 표현할 수 있는 동사를 사용하는 것이 그것인데요. 이렇게 해서 어떻게 이 리소스를 어떻게 처리하는지가 계층적으로 잘 드러나게 됩니다\n> [토스ㅣSLASH 21 - 결제 시스템의 SDK와 API 디자인](https://youtu.be/E4_0WWqmF3M?t=565)> [](https://youtu.be/E4_0WWqmF3M?t=565)"},{"fields":{"slug":"/ARIA Accessible Rich Internet Applications/","title":"ARIA Accessible Rich Internet Applications"},"frontmatter":{"draft":false},"rawBody":"[ARIA - MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA)"},{"fields":{"slug":"/Astro/","title":"Astro"},"frontmatter":{"draft":false},"rawBody":"[[리액트 React]], [[뷰 Vue]], [[스벨트 Svelte]]같은 여러 [[단일 페이지 애플리케이션 SPA]] [[프레임워크 Framework|프레임워크]] 로 만든 컴포넌트를 섞어 쓸 수 있는 [[정적 사이트 생성 SSG Static Site Generation|정적 사이트 생성기]]다. 정적 사이트 생성기들이 그렇듯이, javascript 없이 100% [[정적 컨텐츠 vs 동적 컨텐츠|정적static]]인 html로 렌더링해줘서 [[검색 엔진 최적화 SEO]] 도 잘 되고, 유지 비용도 적다. js로 동적인 기능이 필요하면 [[하이드레이션 Hydration]]을 해주기 때문에, 딱 동적인 부분의 js만 사용할 수 있다.\n\n[Our experience with Astro - \\<div\\>riots 블로그](https://divriots.com/blog/our-experience-with-astro)\n\n[introducing astro - 공식 사이트](https://astro.build/blog/introducing-astro/)\n[Ship Less JavaScript with Astro - 영상 + 스크립트](https://www.learnwithjason.dev/ship-less-javascript-with-astro)\n[Astro in 100 Seconds](https://youtu.be/dsTXcSeAZq8) - [[FireShip]]"},{"fields":{"slug":"/CRUD Create Read Update Delete/","title":"CRUD Create Read Update Delete"},"frontmatter":{"draft":false},"rawBody":"CRUD는 파일이나 [[데이터 Data]]를 다루는 연산의 종류다. 각각\n\nCreate 생성\nRead 읽기\nUpdate 수정\nDelete 삭제\n\n에 대응한다. 파일을 생성하고, 읽어오고, 수정하고, 삭제하는 걸 생각하면 쉽게 이해할 수 있다.\n\n데이터를 쓰거나 삭제하는 CUD는 [[부수효과 Side Effect]]를 일으켜서 데이터 내용을 바꿔버린다. 수정과 삭제는 [[멱등성 idempotent]] 을 만족하기 때문에, 여러 번 실행해도 같은 결과를 얻는다.\n\n[[HTTP]]는 원래 [[정적 컨텐츠 vs 동적 컨텐츠 | 정적 파일]]을 전송하는 프로토콜이었기 때문에, CRUD에 대응되는 POST, GET, PUT/PATCH, DELETE [[HTTP 메서드 method]]를 가지고 있다. [[REST REpresentational State Transfer]]도 이런 사상에 입각해서 만들어졌다.\n\n하지만 [[도메인 주도 설계에서는 CRUD로 모델링하는 걸 싫어한다]].  결제나 주문 같은 [[도메인 Domain]]의 개념들은 CRUD에 1대1로 대응하지 않기 때문이다. "},{"fields":{"slug":"/Dgraph/","title":"Dgraph"},"frontmatter":{"draft":false},"rawBody":"[[GraphQL]]에 기반한 [[분산형 Distributed]] [[그래프 데이터베이스 Graph Database]]\n\n"},{"fields":{"slug":"/EdgeDB/","title":"EdgeDB"},"frontmatter":{"draft":false},"rawBody":"\n\n첫 번째 [[관계형 데이터베이스 Relational Database|관계형]] [[그래프 데이터베이스 Graph Database|그래프]] [[데이터베이스 Database]] 라고 한다. 기존 [[객체 관계 맵퍼 ORM]] 의 한계를 뛰어넘는다는 야심찬 목표를 가지고 있다. 간결하고 직관적인 자체 [[질의 언어 Query Language]]인 EdgeQL을 만들었지만. [[GraphQL]]을 이용한 API도 지원한다고 한다. 테이블 대신 [[객체 Object]]를 기본 단위로 사용해서 [[객체 데이터베이스 Object Database]]를 떠올리게도 한다.\n\n현재 [[자바스크립트 Javascript]], [[파이썬 Python]], [[고 Go]] 언어 클라이언트를 지원한다. (엘릭서나 클로저는 지원하실 계획이 있으신가요?)"},{"fields":{"slug":"/FastAPI/","title":"FastAPI"},"frontmatter":{"draft":false},"rawBody":"[[Sebastian Ramirez]]가 만든 [[비동기 Asynchronous|비동기]]와 [[타입 Type|타입]]힌트를 토대로 간결하고 안전하게 고성능의 코드를 짤 수 있게 도와주는 [[파이썬 Python|파이썬]] [[웹 서버 Web Server|웹서버]] [[프레임워크 Framework|프레임워크]]. [[C]]로 만든 Uvicorn에 기반한 Starllete 프레임워크 위에서 돌아가기 때문에 빠르면서도, [[GraphQL]] 지원을 비롯해 Starllete의 여러 기능을 그대로 쓸 수 있다.\n\n"},{"fields":{"slug":"/FaunaDB/","title":"FaunaDB"},"frontmatter":{"draft":false},"rawBody":"[공식 사이트](https://fauna.com/)\n\n[[분산형 Distributed]] 멀티 모델 [[GraphQL]]에 기반한 [[데이터베이스 Database]]라고 한다."},{"fields":{"slug":"/FireShip/","title":"FireShip"},"frontmatter":{"draft":false},"rawBody":"파이어십은 쉽고 빠르게 100초라고 하지만 2분 전후로 여러 기술을 소개해주는 [[유튜브 Youtube]] 채널이다."},{"fields":{"slug":"/GTD/","title":"GTD"},"frontmatter":{"draft":false},"rawBody":"[[수집함]]\n[[프로젝트]]\n[[다음 행동]]\n[[언젠가]]"},{"fields":{"slug":"/GraphQL/","title":"GraphQL"},"frontmatter":{"draft":false},"rawBody":"[GraphQL: The Documentary - 유튜브 영상](https://youtu.be/783ccP__No8)\n[GraphQL Explained in 100 Seconds - FireShip](https://youtu.be/eIQh02xuVw4)\n[GraphQL is not just a network protocol](https://blog.cometkim.kr/posts/graphql-is-not-just-a-network-protocol/)\n[Thinking in GraphQL](https://blog.cometkim.kr/posts/thinking-in-graphql-ko/)\n\n[[페이스북 Facebook]]에서 만든 [[API Application Programming Interface|API]]를 위한 언어. [[REST REpresentational State Transfer|REST]] API를 대체하는 것처럼 소개되지만, 이름처럼 SQL 대신 [[Dgraph]]같은 데이터베이스의 쿼리 언어로도 사용된다.\n\n[[도구 tooling|툴링]]이 괜찮은 편인데. [[OpenAPI]]처럼 [[스키마 Schema]]를 작성할 수 있고, 자동으로 여러 [[프로그래밍 언어 Programming Language|언어]]의 [[클라이언트 Client|클라이언트]]나 [[타입 Type|타입]] 정의 파일, 프로젝트의 틀을 [[자동 생성 Auto Generation|자동으로 생성]]해주기도 한다.\n\n중첩된 데이터를 가져오는 경우에, REST API는 지나치게 많은 요청을 보내야 하는 경우가 많았는데. [[N+1 문제]]처럼 성능 상으로도 문제지만, 변경되는 API를 관리하기도 어려웠다.\n\nGraphQL에서는 원하는 데이터를 명시해주면 [[리졸버 Resolver]]라는 걸 이용해서 각 자원의 데이터를 가져오고, 이 데이터들을 조합해서 한 번에 클라이언트로 보내준다.\n\n이러면 서버에서 N+1 문제가 생기지 않을까 싶겠지만, 요즘은 GraphQL의 특성을 그대로 이용해서 성능 최적화를 해주는 [[객체 관계 맵퍼 ORM]]이나 [[EdgeDB]] 같은 데이터베이스도 등장했다.\n\n데이터를 읽어오는 Query와 추가, 변경, 삭제하는 Mutation의 리졸버를 분리하여, [[명령 질의 책임 분리 CQRS|CQRS]]를 핵심에 두고 있다."},{"fields":{"slug":"/Hasura/","title":"Hasura"},"frontmatter":{"draft":false},"rawBody":"[홈페이지](https://hasura.io)"},{"fields":{"slug":"/Nact/","title":"Nact"},"frontmatter":{"draft":false},"rawBody":"[[액터 모델 Actor Model]]에 기반한 [[노드.js Node.js]] [[프레임워크 Framework]]"},{"fields":{"slug":"/Neo4J/","title":"Neo4J"},"frontmatter":{"draft":false},"rawBody":"[[그래프 데이터베이스 Graph Database]]\n"},{"fields":{"slug":"/NoSQL/","title":"NoSQL"},"frontmatter":{"draft":false},"rawBody":"[[관계형 데이터베이스]]가 아닌 데이터베이스를 싸잡아 부르는 호칭. 관계형 데이터베이스는 보통 SQL 기반이라 NoSQL이라고 부르게 되었다."},{"fields":{"slug":"/OpenAPI/","title":"OpenAPI"},"frontmatter":{"draft":false},"rawBody":"[[HTTP]]/[[REST REpresentational State Transfer]] [[API Application Programming Interface]] 를 명세하는 표준. Swagger 에서 Apache로 넘겨져서 표준이 되었다."},{"fields":{"slug":"/PostgreSQL/","title":"PostgreSQL"},"frontmatter":{"draft":false},"rawBody":"[[SQL]] [[데이터베이스 Database]]\n"},{"fields":{"slug":"/Practical Vim/","title":"Practical Vim"},"frontmatter":{"draft":false},"rawBody":"vim 사용법을 잘 알려주는 책이라고 한다\n"},{"fields":{"slug":"/REST REpresentational State Transfer/","title":"REST REpresentational State Transfer"},"frontmatter":{"draft":false},"rawBody":"[[HTTP]] [[프로토콜 Protocol]]에 기반하여 웹 [[API Application Programming Interface]]와 [[자원 Resource]]을 정의하는 방법론이자, 네트워크 아키텍처다. HTTP의 주요 저자인 [로이 필딩의 박사 논문](https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm)에서 처음 제시되었다.\n\n표현적 상태 전송이라는 말처럼, api 서버의 상태를 그 구조 그대로 전송하기 위한 방법론이다.\n\napi url에는 자원의 이름을 나타내는 명사만 써야한다고 해서, [[API에 동사를 쓰자]]고 하는 분들은 싫어하신다.\n"},{"fields":{"slug":"/RPC Remote Procedure Call/","title":"RPC Remote Procedure Call"},"frontmatter":{"draft":false},"rawBody":"원격 프로시저 호출. 프로시저는 함수처럼 생각하면 된다. 다른 시스템에서 돌아가는 프로그램의 함수를, 마치 우리 프로그램의 함수처럼 호출할 수 있는 기술이다. 물론 [[분산형 Distributed]] 시스템이 늘 그렇듯이, 고통스러운 [[네트워크 지연 Network Delay]]이나 [[장애 극복 Failover]]같은 문제를 고민해야 한다. 그래서 [[비동기 Asynchronous]]를 도입해서 지연 문제를 해결하는 편이다.\n\n대표적으로 구글에서 만든 [[gRPC]]가 있다."},{"fields":{"slug":"/React Hooks/","title":"React Hooks"},"frontmatter":{"draft":false},"rawBody":"클래스 컴포넌트에서 hook으로\n"},{"fields":{"slug":"/Remix/","title":"Remix"},"frontmatter":{"draft":false},"rawBody":"[[리액트 React]]에 기반한 [[웹 Web]] [[프레임워크 Framework]]. [[분산형 Distributed]] [[클라우드 Cloud]]의 [[서버리스 Serverless]] 인프라를 이용해서 [[엣지 Edge]]에서 돌아가도록 설계되었다고 한다. 빠른 웹 성능으로 [[사용자 경험 UX]] 을 잡았을 뿐만 아니라, 온갖 프런트엔드 상태 관리의 고통의 대부분인 데이터 로딩과 [[반응형 상태 관리 Reactive State Management|상태 관리]] 문제도 해결해서 [[개발자 경험 DX]]까지 챙겨준다고 한다.\n\n[[스트리밍 Streaming]] [[서버 사이드 렌더링 SSR Server Side Rendering|SSR]]이라는 신기한 개념이 있는데. 각 컴포넌트가 [[렌더 Render]]되는 대로 문자열로 [[직렬화 Serialize]]해서 유튜브 영상 스트리밍 하듯이 브라우저로 쏴준다는 개념이다.\n\n흠. 늘 그렇듯이 [[절절한 구애문]]이다."},{"fields":{"slug":"/SWC/","title":"SWC"},"frontmatter":{"draft":false},"rawBody":"[[러스트 Rust]]로 만든 [[바벨 Babel]] 대체제. [[컴파일 언어를 이용해서 다시 만드는 트렌드]]의 사례다."},{"fields":{"slug":"/Sebastian Ramirez/","title":"Sebastian Ramirez"},"frontmatter":{"draft":false},"rawBody":"![그의 프로필 사진. 콜롬비아인의 자존심이 담긴 콧수염이 양쪽으로 둥글게 말려 있다](https://evrone.com/sites/default/files/styles/card_w1920/public/n-fields/cases/profile.jpg?itok=YzGYLUYy)\n\n콜롬비아 출신으로 독일 데이터 과학 업계에서 일하는 풀스택 개발자. [[FastAPI]] 를 만들었다.\n\n> **Where are you right now?**\n> R: I’m in Berlin, Germany.\n> **Where did you grow up?**\n> R: I’m from Columbia. I’ve been working in a bunch of startups throughout the world in Latin America, the Middle East, and now in Germany\n> - [Interview with Sebastian Ramirez: FastAPI Creator](https://flagsmith.com/podcast/fastapi-sebastian-ramirez/)\n\n[FastAPI Creator Sebastián Ramírez Interview](https://evrone.com/sebastian-ramirez-interview)\n\n"},{"fields":{"slug":"/Supabase/","title":"Supabase"},"frontmatter":{"draft":false},"rawBody":"[공식 문서](https://supabase.com/docs/)\n[공식 트위터](https://twitter.com/supabase)\n\n\n[[오픈소스 Open Source|오픈 소스]] [[Firebase]] 대체제다. [[백엔드 Backend]]에 지식이 거의 없는 [[클라이언트 Client]] 개발자도 쉽게 [[REST REpresentational State Transfer|REST]] [[API Application Programming Interface|API]]나 회원가입이나 로그인 같은 [[인증 Authentication|인증]] 기능을 구현할 수 있게 도와준다.\n\n[[Under the Hood|내부적]]으로는 [[PostgreSQL]]을 토대로 삼고 있다. 그 외에도 여러 독립적인 오픈소스를 결합한 구조다. supabase의 [아키텍처](https://supabase.com/docs/architecture)에 대해 설명한 문서를 참고하자.\n\n"},{"fields":{"slug":"/TSDoc/","title":"TSDoc"},"frontmatter":{"draft":false},"rawBody":"[공식 문서](https://tsdoc.org)\n\n타입스크립트에 표준화된 방식으로 주석을 달 수 있게 도와주는 도구인 모양이다.\n\n [API Extractor](https://api-extractor.com/pages/tsdoc/doc_comment_syntax/) 같은 다른 [[문서화 Documentation]] 도구들에게 넘겨서 문서 파일을 생성할 수 있다고 한다."},{"fields":{"slug":"/Under the Hood/","title":"Under the Hood"},"frontmatter":{"draft":false},"rawBody":"자동차 앞에 보면 본네트/후드라고 부르는 뚜껑이 있다. 이 뚜껑을 열면 엔진부터 배터리, 냉각수 등등 여러 자동차의 내부 구조를 보고 다룰 수 있는데. 그래서 정비소에 가면 엔지니어들이 일단 후드부터 까보곤 한다.\n\n코딩에서 Under the Hood는 프레임워크나 라이브러리가, 다른 프레임워크나 라이브러리를 내부적으로 이용하고 있을 때 많이 쓰는 표현이다. 겉으로는 드러난 [[인터페이스 Interface]]만 봐서는 알 수 없는 [[내부 Internal]] 구조를 가리킨다.\n\n[[EdgeDB]]는 내부적으로 [[PostgreSQL]]을 사용한다.\n\nEasyRpc 라는 라이브러리는 FastAPI를 이용해 만들었다고 하며\n[[FastAPI]]는 데이터 [[검증 Validation]]은 [[Pydantic]]을 이용하고, 서버 자체는 [[Starllete]]의 기능을 이용한다. Strallete은 또 Uvicorn으로 만들었다.\n> Under the hood, FastAPI uses Pydantic for data validation and Starlette for tooling\n\n[[Nest]] 는 내부적으로 [[Express]]를 사용하지만, [[Fastify]]를 이용한 [[어댑터 Adapter]]를 사용할 수도 있다.\n> Under the hood, Nest makes use of robust HTTP Server frameworks like [Express](https://expressjs.com/) (the default) and optionally can be configured to use [Fastify](https://github.com/fastify/fastify) as well! - [Nest 공식 문서](https://docs.nestjs.com)\n\n"},{"fields":{"slug":"/V8 엔진/","title":"V8 엔진"},"frontmatter":{"draft":false},"rawBody":"[[구글 Google]]에서 만든 [[자바스크립트 Javascript]] 엔진 [[구현체 Implementation]].\n"},{"fields":{"slug":"/Vim, 두 가지 관점/","title":"Vim, 두 가지 관점"},"frontmatter":{"draft":false},"rawBody":"[Vim, 두 가지 관점](https://johngrib.github.io/wiki/two-views-of-vim/)\n[[빔 Vim]]을 사랑하시는 [[기계인간 John Grib]] 님이 Vim 을 바라보고 사용하는 관점에 대해 적으신 글"},{"fields":{"slug":"/Vitest/","title":"Vitest"},"frontmatter":{"draft":false},"rawBody":"[[비트 vite]] 기반으로 만들어진 테스트 [[프레임워크 Framework]] [[Jest]] 를 대체하기 위해 만들어졌고, API가 호환된다."},{"fields":{"slug":"/XState/","title":"XState"},"frontmatter":{"draft":false},"rawBody":"[[액터 모델 Actor Model]]과 [[유한 상태 기계 Finite State Machine]]을 토대로 만든 [[반응형 상태 관리 Reactive State Management]] 라이브러리"},{"fields":{"slug":"/esbuild/","title":"esbuild"},"frontmatter":{"draft":false},"rawBody":"# [esbuild](https://esbuild.github.io)\n> An extremely fast JavaScript bundler\n\n[[고 Go]] 로 만들어서 [[웹팩 webpack]]보다 매우 빠른 js [[모듈 번들러 Module Bundler]]라고 한다. 짧게는 몇 초부터 길게는 1분 넘게 걸리는 webpack 번들링을 기다리는 고통을 줄여준다. 자체 벤치마크에 따르면 웹팩5로 41.53초가 걸리는 번들링을, 0.33초만에 끝낸다고 한다.\n\n[esbuild는 왜 빠른가요?](https://esbuild.github.io/faq/#why-is-esbuild-fast)\n웹팩은 [[자바스크립트 Javascript]]로 만들어졌는데 [[인터프리터 Interpreter]] 언어인 js보다 [[컴파일 Compile]] 언어인 [[고 Go]] 는 수 십 배 빠르기 때문이라 한다. 그 외에도 단일 [[스레드 Thread]]인 js와 달리 멀티 스레드로 [[병렬성 Parallelism]]을 잘 활용하고, 메모리도 더 효율적으로 쓴다고 한다. "},{"fields":{"slug":"/gRPC/","title":"gRPC"},"frontmatter":{"draft":false},"rawBody":"[[구글 Google]]에서 만든 [[RPC Remote Procedure Call|RPC]] [[프로토콜 Protocol|프로토콜]]이라서 gRPC라는 이름이 붙었다. 다양한 [[프로그래밍 언어 Programming Language|언어]] [[실행 환경 Running Environment|실행환경]]을 지원한다. [[마이크로서비스 Micro Service]] 같은 [[분산형 Distributed]] 아키텍처에서 서비스 간 통신과 연동을 위해 많이 쓰인다.\n"},{"fields":{"slug":"/가추법 abduction/","title":"가추법 Abduction"},"frontmatter":{"draft":false},"rawBody":"가설 추리, 최선 설명으로서의 추리(Inference to the Best Explanation)라고도 한다."},{"fields":{"slug":"/강타입 Strongly Typed/","title":"강타입 Strongly Typed"},"frontmatter":{"draft":false},"rawBody":"[[힌들리 밀너 추론]]처럼 강력한 타입 시스템을 가진 언어들을 부르는 말.\n\n-   만약 어떤 언어에서 형 선언이 값 혼자가 아닌 변수에 선언되어 있으면 강형 언어이고, 값에만 형이 연결되어 있으면 약형 언어이다. (정확한 용어는 정적 형 선언과 동적 형 선언이다.)\n-   만약 어떤 언어가 컴파일 시간에 형 제한 위반에 대한 체크를 한다면 강형 언어이고, 모든 체크가 실행 시간에 이루어지면 약형 언어이다.\n-   만약 어떤 언어가 컴파일 시간 또는 실행 시간에 형 제한 위반에 대한 체크를 한다면 강형 언어이고, 아무 체크도 하지 않는다면 약형 언어이다.\n-   만약 어떤 언어에서 서로 다른 형 사이의 변환이 금지되어 있으면 강형 언어이고, 그러한 변환이 허용되면 약형 언어이다.\n-   만약 어떤 언어에서 서로 다른 형 사이의 변환이 항상 명시적으로 지정되어 있어야 한다면 강형 언어이고, 묵시적인 변환이 허용된다면 약형 언어이다.\n-   만약 어떤 언어에서 형 체계를 비활성시키거나 피해 가는 언어 수준에서의 방법이 존재하지 않으면 강형 언어이고, C 스타일의 캐스팅이나 다른 방법들이 존재하면 약형 언어이다.\n-   만약 어떤 언어가 복합 형에 대해서 복합적이고 잘 정의된 형 체계를 갖추고 있다면 강형 언어이고, 적은 수의 형이나 스칼라 형만이 존재할 경우 약형 언어이다.\n-   만약 어떤 언어에서 어떤 객체의 형이 고정되어 있고 객체의 생존 시간 동안에 변하지 않는다면 (보통 \"정적 형 선언\"이라 부름) 강형 언어이고, 그 형이 변할 수 있다면 약형 언어이다.\n-   만약 어떤 언어의 형 체계가 실행 시간에서의 행동에 대해 강한 보장을 한다면 강형 언어이고, 그러한 보장을 하지 않는다면 약형 언어일 가능성이 높다."},{"fields":{"slug":"/개발자 vs 프로그래머 vs 코더/","title":"개발자 vs 프로그래머 vs 코더"},"frontmatter":{"draft":false},"rawBody":"코딩하는 사람만 개발자라 하는 것도 싫어하고. 프로그래머와 코더를 나누는 것도 별로 안 좋아하지만. 우리가 나아갈 방향에 대해서는 생각해보자."},{"fields":{"slug":"/개발자에서 아키텍트로/","title":"개발자에서 아키텍트로"},"frontmatter":{"draft":false},"rawBody":"[[책 Book]]"},{"fields":{"slug":"/갯츠비 Gatsby/","title":"갯츠비 Gatsby"},"frontmatter":{"draft":false},"rawBody":"[[리액트 React]] 기반의 [[잼스택 JamStack]] [[웹 Web]] [[프런트엔드 Frontend]] 프레임워크\n\n[[정적 사이트 생성 SSG Static Site Generation]]이 주력이지만 [[서버 사이드 렌더링 SSR Server Side Rendering]]도 지원한다."},{"fields":{"slug":"/검색 인덱스 Search Index/","title":"검색 인덱스 Search Index"},"frontmatter":{"draft":false},"rawBody":"[실시간 인덱싱을 위한 Elasticsearch 구조를 찾아서 - 우아한 형제들 기술 블로그](https://techblog.woowahan.com/7425/)"},{"fields":{"slug":"/고 Go/","title":"고 Go"},"frontmatter":{"draft":false},"rawBody":"문법이 단순해서 [[컴파일 Compile]]이 매우 빠르고 배우기 쉬운 [[프로그래밍 언어 Programming Language]]\n컴파일 언어인데도 [[인터프리터 Interpreter]] 언어처럼 쓸 수 있다."},{"fields":{"slug":"/그래프 데이터베이스 Graph Database/","title":"그래프 데이터베이스 Graph Database"},"frontmatter":{"draft":false},"rawBody":"그래프 형태로 데이터를 저장하는 [[NoSQL]] [[데이터베이스 Database]]\n\n[[Neo4J]]\n[[레디스 Redis]] Graph\n[[Dgraph]]\n"},{"fields":{"slug":"/그린랩스 Green labs/","title":"그린랩스 Green Labs"},"frontmatter":{"draft":false},"rawBody":"> 디지털 전환을 시작으로 \n> 농업의 혁신을 이끕니다 \n> \n> 나아가 지속가능한 방법으로 \n> 미래 식량 문제를 해결합니다\n> \n> 그린랩스는 농민이 농사짓는 과정에서 경험했던 불편함과 어려움에 주목하여   \n> 농창업을 시작으로 농장 신축, 작물 재배, 유통 판매에 이르기까지   \n> 농업 종사자를 위한 모든 솔루션을 디지털화합니다.\n\n[[함수형 Functional]] 으로 굴러가는 농업 스타트업.\n\n[[남현우]] CTO 님은 [[리디북스 Ridi Books]]에서 오래 일하셨는데. 전부터 꿈꿔오던 함수형 풀스택의 꿈을 경영진의 지원을 받아 실현하셨다고 한다.\n\n[[백엔드 Backend]]는 [[정적 타입 vs 동적 타입|동적 타입]] [[리스프 Lisp]]의 [[JVM Java Virtual Machine|JVM]]에서 돌아가는 방언인 [[클로저 Clojure]]로 [[GraphQL]] API 서버를 개발하고.\n[[프런트엔드 Frontend]]는 [[자바스크립트 Javascript]]로 컴파일 되는 [[강타입 Strongly Typed]] 언어인 [[리스크립트 Rescript]]와 [[리액트 React]]로 개발하고 있다.\n"},{"fields":{"slug":"/기계인간 John Grib/","title":"기계인간 John Grib"},"frontmatter":{"draft":false},"rawBody":"[블로그](https://johngrib.github.io/about/)\n\n[[빔 Vim]]에 빠진 유물론자. 사랑하는 아내님과 행복하게 살고 있으시다고 한다. [[그린랩스 Green labs]]에서 [[클로저 Clojure]] 로 [[백엔드 Backend]] 개발을 하고 계신다.\n\n[[철학과를 나온 개발자는 현명하다는 편견]]을 강화하는 [[귀납 Induction]]적 사례이시기도 하다.\n"},{"fields":{"slug":"/기초부터 완성까지, 프런트엔드/","title":"기초부터 완성까지, 프런트엔드"},"frontmatter":{"draft":false},"rawBody":"프런트의 다양한 면을 면밀하게 다루는 책.\n\n리액트나 vue, svelte같은 프레임워크도 간단히 소개하지만, 깊고 복잡한 사용법을 다루진 않는다."},{"fields":{"slug":"/나는 사랑하는 사람을 좋아한다/","title":"나는 사랑하는 사람을 좋아한다"},"frontmatter":{"draft":false},"rawBody":"세상에는 많은 사랑꾼들이 있다. 특히 사랑하는 아저씨들은 결혼을 하고 페미니즘적으로 깨어 있으면서도 늘 자기 성찰을 하시는데. [[철학과를 나온 개발자는 현명하다는 편견|철학과를 나온 개발자]] 중에도 그런 분들이 있으신 것도 같다."},{"fields":{"slug":"/나는 투쟁하는 사람을 사랑한다/","title":"나는 투쟁하는 사람을 사랑한다"},"frontmatter":{"draft":false},"rawBody":"> \"토끼 님은 투쟁하는 사람을 사랑하는군요?\" - 꾀꼬리 님\n\n"},{"fields":{"slug":"/다음 행동/","title":"다음 행동"},"frontmatter":{"draft":false},"rawBody":"- 테스트 merge하기\n- "},{"fields":{"slug":"/데이터 중심 애플리케이션 설계 Designing Data Intensive Applications/","title":"데이터 중심 애플리케이션 설계 Designing Data Intensive Applications"},"frontmatter":{"draft":false},"rawBody":"[[데이터 Data]] 시스템이 겪는 문제들을 해부한 책. 하지만 이 두꺼운 책도 시작일 뿐이다!\n[[분산형 Distributed]] 시스템을 만드는 고통에 대해 잘 알려준다\n"},{"fields":{"slug":"/도메인 Domain/","title":"도메인 Domain"},"frontmatter":{"draft":false},"rawBody":"문제 영역이라 번역하기도 한다."},{"fields":{"slug":"/도메인 주도 설계 DDD/","title":"도메인 주도 설계 DDD"},"frontmatter":{"draft":false},"rawBody":"영어로 풀어 쓰면 Domain Driven Design 이라고 한다."},{"fields":{"slug":"/도메인 주도 설계에서는 CRUD로 모델링하는 걸 싫어한다/","title":"도메인 주도 설계에서는 CRUD로 모델링하는 걸 싫어한다"},"frontmatter":{"draft":false},"rawBody":"결제나 주문 같은 [[도메인 Domain]]의 개념들은 [[CRUD Create Read Update Delete|CRUD]]에 1대1로 대응하지 않기 때문이라고 한다. CRUD 모델 아래에서는 도메인이 아니라 DB 중심으로 코드를 짜게 되어, 도메인의 [[불변식 Constraint]]이나 [[무결성 Integrity]] 일관적으로 유지하기 어려워진다고 한다.\n\n예를 들어 23300원짜리 배달을 주문을 시키고 결제를 한다면 CRUD에 어디에 해당할까?\n\n상품의 가격과 할인 정보를 불러와서 검증하는 등의 READ가 필요하고.\n결제 기록과 주문 요청, 배달 요청 등을 생성하는 CREATE 작업도 필요하며\n잔액이 줄어들테니 UPDATE도 필요하고\n사용한 쿠폰 등은 사라질테니까 DELETE 도 필요하다.\n\n또 똑같은 상황을 잔액이 줄어드는 게 아니라 충전 기록과 결제 기록을 조합해서 잔액을 파생상태로 구현하는 [[이벤트 소싱 Event Sourcing]]도 가능하고.\n쿠폰이 사라지는 게 아니라, \"사용됨\" 상태로 변경함으로서 UPDATE로 처리할 수도 있다.\n\n배달 도메인에서 결제 [[이벤트 주도 Event Driven|이벤트]]가 일어났을 때 이렇게 신경 써야할 연산도 많고, [[부수효과 Side Effect]]도 많다. 그러니 결제를 단순히 CREATE 라고 퉁칠 수 없고. 그래서 DDD에서는 데이터 CRUD 연산에 API를 1대1 대응시키지 않으려 한다.\n\n[[도메인 주도 설계 DDD]]에서는 대신 [[영역 특화 언어 DSL]]를 만들어서 자연스럽게 코드와 현실 개념이 대응되도록 [[도메인 모델링 Domain Modeling]]을 한다."},{"fields":{"slug":"/동시성 vs 병렬성 vs 분산/","title":"동시성 vs 병렬성 vs 분산"},"frontmatter":{"draft":false},"rawBody":"영어로는 Concurrency vs Parallelism vs Distributed 라고 쓸 수 있다.\n\n자주 나오면서 헷갈리는 개념이니까. 구분해보자.\n\n[Concurrency 와 Parallel - 기계인간 님 블로그](https://johngrib.github.io/wiki/concurrency-and-parallel/)"},{"fields":{"slug":"/동적 타입 언어가 정적 타입을 도입하는 경향/","title":"동적 타입 언어가 정적 타입을 도입하는 경향"},"frontmatter":{"draft":false},"rawBody":"[[정적 타입 vs 동적 타입]]\n"},{"fields":{"slug":"/디노 Deno/","title":"디노 Deno"},"frontmatter":{"draft":false},"rawBody":"![|200x200](https://deno.land/logo.svg)\n\n\n[[러스트 Rust]]로 다시 만드는 [[노드.js Node.js]] 대체제. 노드 제작자인 [[라이언 달 Ryan Dahl]]이 직접 시작한 새 프로젝트다. 비를 맞고 있는 공룡을 로고로 밀고 있다. 노드처럼 [[V8 엔진]]을 [[Under the Hood|기반]]으로 만들어졌다. fetch나 localStorage 같은 [[웹 표준 Web Standard]] [[API Application Programming Interface]]와 더 나은 [[호환성 compatibility]]을 지원하고. [[명시적으로 허용하지 않은 기능은 사용할 수 없다]]는 깐깐한 [[보안 Security]] 정책을 자랑한다."},{"fields":{"slug":"/라이언 달 Ryan Dahl/","title":"라이언 달 Ryan Dahl"},"frontmatter":{"draft":false},"rawBody":"![200x300](https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Ryan_Dahl.jpg/440px-Ryan_Dahl.jpg)\n\n[[노드.js Node.js]]와 [[디노 Deno]] [[자바스크립트 Javascript]] [[실행 환경 Running Environment|런타임]]을 만든 미국의 개발자."},{"fields":{"slug":"/라즈베리파이 Raspberry Pi/","title":"라즈베리파이 Raspberry Pi"},"frontmatter":{"draft":false},"rawBody":"저렴한 미니 컴퓨터다. 필요한 것만 있고, 없어도 되는 건 다 빼서 저렴하다. 예를 들어 시간을 맞춰주는 [[라즈베리파이에는 RTC가 없다]]"},{"fields":{"slug":"/라즈베리파이에는 RTC가 없다/","title":"라즈베리파이에는 RTC가 없다"},"frontmatter":{"draft":false},"rawBody":"[[RTC Real Time Clock]]은 컴퓨터 안에서 시간을 알려주는 기계 부품이다.\n[[라즈베리파이 Raspberry Pi]]는 이렇게 비싼 RTC를 넣을 여유가 없기 때문에. rdate 같은 걸로 인터넷에서 시간을 가져와서 맞춰줘야 한다.\n\n그런 설정을 안 해주면? 시간 관련된 게 모두 꼬인다. 예를 들어 https 요청을 보내면 인증서 검증을 못해서 깨진다."},{"fields":{"slug":"/레디스 Redis/","title":"레디스 Redis"},"frontmatter":{"draft":false},"rawBody":"매우 빠른 [[인메모리 in memory]] [[키-값 key-value]] [[데이터베이스 Database]]"},{"fields":{"slug":"/렌더 Render/","title":"렌더 Render"},"frontmatter":{"draft":false},"rawBody":"렌더링이란 보통 두 가지 의미로 쓰이는 모양이다. [[사용자 인터페이스 UI]]의 화면을 그리는 일, HTML을 생성하는 것."},{"fields":{"slug":"/류성두 Sungdoo Yoo/","title":"류성두 Sungdoo Yoo"},"frontmatter":{"draft":false},"rawBody":"[[접근성 Accessibility]]을 위해 힘쓰시는 IOS 개발자. 눈 오늘 날에 아내 님과 숲 속 도서관에 다녀오셨다고 한다. 뱅크샐러드에서 일하고 있다. [[테스트 주도 개발 Test Driven Development]]에도 열정적이시다. [[철학과를 나온 개발자는 현명하다는 편견]]을 강화하는 [[귀납 Induction]]적 사례 중 한 분.\n\n[트위터](https://twitter.com/SungdooYoo)\n\n[블로그](https://www.sungdoo.dev)\n[접근성 지원, 개발자의 빠른 성장을 도와줍니다](https://www.sungdoo.dev/retrospective-or-psa/how-accessibility-nudges-you-to-be-better-developer)\n[디자인 패턴, 배우기보단 발견합시다](https://www.sungdoo.dev/2640d4eb-4084-44f5-a6fe-52d11b9322cb)\n[“대구 사람들은 우리 앱을 못 쓴대요”라는 버그의 심각성은?](https://www.sungdoo.dev/retrospective-or-psa/severity-of-bug-that-blocks-people-from-daegue)\n[누구나 테스트 주도 개발 당장 시작 할 수 있는 방법](https://www.sungdoo.dev/programming/easiest-way-to-start-tdd)"},{"fields":{"slug":"/리누스 토발즈/","title":"리누스 토발즈"},"frontmatter":{"draft":false},"rawBody":"[[리눅스 Linux]]와 [[깃 Git]]을 만든 개발자. 스웨덴계 핀란드인이다. 포병 소위로 군생활을 했다고 한다. 핀란드 가라데 챔피언인 아내가 조교였던 리누스 씨에게 다짜고짜 데이트 신청을 해서 결혼하게 되었다고 한다.\n\n입이 험하신데 요즘은 유해지셨다고 한다. 기술적인 이야기를 할 때 상대의 감정을 신경 쓰지 않고 험하게 말하는 편인데. 테드 영상을 보면 자신의 그런 성격을 좋아하지 않는다며, 더 나은 오픈소스 커뮤니티를 만들려 노력하신다는 모양이다."},{"fields":{"slug":"/리눅스 Linux/","title":"리눅스 Linux"},"frontmatter":{"draft":false},"rawBody":"[[리누스 토발즈]]가 만든 [[운영체제]].\n\n대학교 2학년 때 운영체제 수업을 듣고서 타넨바움 교수의 MINIX를 자기 컴퓨터에서 돌아가게 개조해서 만들었다고 한다.\n\n[[]]"},{"fields":{"slug":"/맵 Map/","title":"맵 Map"},"frontmatter":{"draft":false},"rawBody":"파이썬에서는 dictionary라 부른다.\njs에서는 object도 map이지만, 삽입 삭제가 더 빠른 Map 자료형도 따로 구현되어 있다."},{"fields":{"slug":"/뷰 Vue/","title":"뷰 Vue"},"frontmatter":{"draft":false},"rawBody":"에반 유가 만든 [[오픈소스 Open Source]] [[프런트엔드 Frontend]] [[프레임워크 Framework]]. [[모던]] 프런트엔드 프레임워크들이 다들 그렇듯이 [[반응형 상태 관리 Reactive State Management]]와 [[컴포넌트 Component]]에 기반해서 [[선언적 Declarative]]를 작성할 수 있게 지원한다. 옆집 [[리액트 React]]와 [[앵귤러 Angular]]와 함께 프런트엔드 3대장으로 불린다.\n\n리액트(페이스북)나 앵귤러(마소)처럼 특정 기업에 종속되지 않고 순수 [[오픈소스 Open Source]]로 개발되고 있다.\n\n[[의존성 주입]]을 잘 지원하고, [[템플릿 엔진 Template Engine]] 기반으로 directive"},{"fields":{"slug":"/빔 Vim/","title":"빔 Vim"},"frontmatter":{"draft":false},"rawBody":"[[커맨드라인 Command Line]]에서 돌아가는 [[텍스트 편집기 Text Editor]] 강력한 [[단축키 Short Cut]]와 [[플러그인 Plugin]] 시스템이 특징이다 "},{"fields":{"slug":"/소스 코드 source code/","title":"소스 코드 Source Code"},"frontmatter":{"draft":false},"rawBody":"줄여서 src라고도 한다"},{"fields":{"slug":"/속성 기반 검사 Property Based Testing/","title":"속성 기반 검사 Property Based Testing"},"frontmatter":{"draft":false},"rawBody":"개별 [[테스트 케이스 Test Case]]가 아니라, [[자동 생성 Auto Generation]]된 데이터로 특정 속성을 만족시키는지 검사하는 방법. 수학적인 느낌이 든다.\n\n[[스칼라로 배우는 함수형 프로그래밍]]에서는 8장에서 속성 기반 검사의 개념과, 테스트 도구 만드는 법을 소개한다. [[함수형 Functional]]은 수학이랑 관련이 깊다 보니, 속성 기반 검사를 다루는 책이 의외로 많은 편이다.\n\n[[하스켈 Haskell]]의 [QuickCheck](https://wiki.haskell.org/QuickCheck)를 비롯해서 여러 언어에 [[속성 기반 검사를 구현한 테스트 프레임워크]]가 있다."},{"fields":{"slug":"/속성 기반 검사를 구현한 테스트 프레임워크/","title":"속성 기반 검사를 구현한 테스트 프레임워크"},"frontmatter":{"draft":false},"rawBody":"대부분은 [[하스켈 Haskell]]  [QuickCheck](https://wiki.haskell.org/QuickCheck) 의 영향을 받았다.\n\nQuickCheck를 [[스칼라 Scala]]로 옮긴 [ScalaCheck](https://scalacheck.org)가 있다.\n\n[[파이썬 Python]]에는 [Hypothesis](https://hypothesis.readthedocs.io/en/latest/)라는 도구가 있다.\n\n[[자바스크립트 Javascript]] 에는 [fast-check](https://github.com/dubzzz/fast-check)가 있다\n\n[[고 Go]] 에는 [gopter](https://github.com/leanovate/gopter) 가 있다.\n\n[[엘릭서 Elixir]] 에는 [stream_data](https://github.com/whatyouhide/stream_data) 가 있다고 한다.\n\n[[러스트 Rust]]에는 [fuzzcheck](https://github.com/loiclec/fuzzcheck-rs)가 있다고 한다."},{"fields":{"slug":"/수집함/","title":"수집함"},"frontmatter":{"draft":false},"rawBody":"- Exercism과 책, 프로젝트, Advent Of Code\n\t- **Clojure / Scheme, Rescript / Ocaml, Haskell(PureScript),** Elm\n\t- **GoLang,** Rust\n\t- Lua\n\t- **Elixir**, Erlang\n\t- Java, **Kotlin**\n\t- C#, F#\n\t- Python\n\t- Deno -> TypeScript, JavaScript\n- PostgreSQL, EdgeDB, Supabase\n\n\n-> 고통과 행복을 수집하고 함께 해결해나가는 플랫폼. 진리의 배\n- 채식과 동물권\n- 장애인\n- 성소수자\n- 폭력의 피해자\n- 혼자서 세상에 나오는 분들\n- 비폭력 대화"},{"fields":{"slug":"/스트리밍 Streaming/","title":"스트리밍 Streaming"},"frontmatter":{"draft":false},"rawBody":"스트리밍은 거대한 "},{"fields":{"slug":"/스핑크스 Sphinx/","title":"스핑크스 Sphinx"},"frontmatter":{"draft":false},"rawBody":"[[파이썬 Python|파이썬]]을 위한 [[문서화 Documentation|문서화]] 도구라고 한다.\n\n**reStructuredText**라는 [[마크다운 Markdown]] 비스무리하게 생긴 [[마크업 Markup]] 언어를 쓰는 모양이다."},{"fields":{"slug":"/아이오닉 Ionic/","title":"아이오닉 Ionic"},"frontmatter":{"draft":false},"rawBody":"[공식 트위터](https://twitter.com/Ionicframework)\n\n[[웹 뷰 Web View]]를 이용해서 [[네이티브 앱 Native App]] 같은 [[사용자 인터페이스 UI]]를 만들 수 있게 도와주는 [[프레임워크 Framework]]\n\n같은 팀이 만든 백엔드로 [[캐패시터 Capacitor]]가 있다."},{"fields":{"slug":"/액터 모델 Actor Model/","title":"액터 모델 Actor Model"},"frontmatter":{"draft":false},"rawBody":"[액터 모델의 역사](https://en.wikipedia.org/wiki/History_of_the_Actor_model)\n\n격리된 지역 상태와 메세지 전달을 통해서 안전한 [[동시성 Concurrency]]을 구현한 \n\n전화 네트워크 시스템 회사인 에릭슨의 프로그래머 조 암스트롱이 [[얼랭 Erlang]] [[프로그래밍 언어 Programming Language|언어]]에서 선구적으로 도입했다.\n\n토끼는 [[함수형 Functional|함수형]]과 [[객체지향 Object Oriented|객체지향]]의 조화를 이룰 수 있을 것 같아서 관심을 가지고 있다."},{"fields":{"slug":"/액터를 구현한 사례/","title":"액터를 구현한 사례"},"frontmatter":{"draft":false},"rawBody":"[[액터 모델 Actor Model]]을 구현한 언어나 프레임워크를 소개한다.\n\n얼랭\n엘릭서 \n코틀린의 액터\n스위프트의 액터\n\n스칼라의 Akka\n\n[[XState]]\n[[Nact]]\n\n[[러스트 Rust]] [[Acticx-web]]"},{"fields":{"slug":"/언젠가/","title":"언젠가"},"frontmatter":{"draft":false},"rawBody":"[[프레임워크 없는 프런트엔드 개발]]\n[[구글은 소프트웨어를 어떻게 테스트하는가]]\n[[데이터 중심 애플리케이션 설계]]\n[[접근성 Accessibility]] 연구\n[[ARIA Accessible Rich Internet Applications]]\n[[인클루시브 디자인 패턴]]\n[[사람을 배려하는 디자인]]\n[[네트워크 분석]]\n[[익스트림 프로그래밍 XP]]\n[[ADHD]]\n[[제럴드 와인버그의 글쓰기 책]]\n[[리팩터링 2판]]\n[[온도계의 철학]]\n[[독학사]]\n[[안전한 웹을 위한 코딩 한 줄의 정석]]\n[[스칼라로 배우는 함수형 프로그래밍]]\n[[함수형 언어 산책]]\n[[모던 자바 인 액션]]\n[[스프링 인 액션]]\n[[표상의 언어에서 추론의 언어로]]\n[[OPIC]]\n[[소통 : 협력적 의사소통의 방법]]\n[[밑바닥부터 만드는 인터프리터 in go]]\n[[밑바닥부터 만드는 컴파일러 in go]]\n[[학습과학]]\n[[헤드퍼스트 애자일]]\n[[리액트 네이티브를 다루는 기술]]\n[[다정한 것이 살아남는다]]\n[[우리는 맞고 너희는 틀렸다]]\n[[성과 향상을 위한 코칭 리더십]]\n[[아픔이 길이 되려면]]\n[[탐험적 테스팅]]\n[[자바와 Junit을 활용한 실용주의 단위 테스트]]\n[[테스트 주도 개발로 배우는 객체지향 설계와 실천]]\n[[이펙티브 타입스크립트]]\n[[기초부터 완성까지, 프런트엔드]]\n[[파이썬 알고리즘 인터뷰]]\n[[신뢰할 수 있는 소프트웨어 출시]]\n[[이산수학]]\n[[인포메이션 아키텍처]]\n"},{"fields":{"slug":"/엘라스틱 서치 Elastic Search/","title":"엘라스틱 서치 Elastic Search"},"frontmatter":{"draft":false},"rawBody":"자바 루씬에 기반한 [[분산형 Distributed]] [[검색엔진 Search Engine]] [[데이터베이스 Database]]"},{"fields":{"slug":"/엘릭서 Elixir/","title":"엘릭서 Elixir"},"frontmatter":{"draft":false},"rawBody":"[[액터 모델 Actor Model]]에 기반한 [[얼랭 Erlang]] [[VM 가상 기계]]에서 돌아가는 [[루비 Ruby]] 스타일의 [[함수형 Functional]] [[프로그래밍 언어 Programming Language]]"},{"fields":{"slug":"/영역 특화 언어 DSL/","title":"영역 특화 언어 DSL"},"frontmatter":{"draft":false},"rawBody":"영어로는 Domain Specific Language라고 한다."},{"fields":{"slug":"/웹 컨텐츠 접근성 지침 WCAG/","title":"웹 컨텐츠 접근성 지침 WCAG"},"frontmatter":{"draft":false},"rawBody":"[사이트](https://www.w3.org/WAI/standards-guidelines/wcag/)\n\n영어로는 Web Content Accessibility Guidelines 이라고 한다."},{"fields":{"slug":"/의사소통 vs 문서화 vs 테스트 vs 타입/","title":"의사소통 vs 문서화 vs 테스트 vs 타입"},"frontmatter":{"draft":false},"rawBody":"여러 프로그래머가 서로 기대하는 계약을 표현하고 공유하는 방법들이다."},{"fields":{"slug":"/인덱스 Index/","title":"인덱스 Index"},"frontmatter":{"draft":false},"rawBody":"한국어로는 색인이라 한다. 원하는 정보를 빨리 찾게 도와주는 데이터다. 책에도 용어 색인이나 목차가 있듯이. [[SQL 인덱스|관계형 데이터베이스에도 인덱스가 있고]] [[엘라스틱 서치 Elastic Search]] 같은 [[검색엔진 Search Engine]]도 [[검색 인덱스 Search Index|인덱스]]를 구축한다.\n\n데이터가 추가되거나 변경, 삭제될 때마다 인덱싱을 다시 해줘야 하기 때문에. 효과적으로 인덱싱을 해야 데이터를 효과적으로 조회할 수 있다.\n\n\n\n"},{"fields":{"slug":"/인터프리터 언어가 컴파일 언어로 만든 코드를 이용해 성능을 높인다/","title":"인터프리터 언어가 컴파일 언어로 만든 코드를 이용해 성능을 높인다"},"frontmatter":{"draft":false},"rawBody":"Python 생태계에는 C언어로 만든 라이브러리가 많다\nJS 생태계에서도 아마 WASM을 비슷하게 사용하게 되지 않을까?"},{"fields":{"slug":"/절절한 구애문/","title":"절절한 구애문"},"frontmatter":{"draft":false},"rawBody":"핑구 님이 쓰신 표현. 여러 프레임워크나 라이브러리는 자신의 장점을 어필하는데. 마치 \"나와 결혼해주세요.\"하는 것처럼 자기를 포장하는 모습을 놀리는 말이다.\n\n원래 이 말이 나온 맥락은 [[Next.js]]의 튜토리얼을 보면서였다."},{"fields":{"slug":"/정적 컨텐츠 vs 동적 컨텐츠/","title":"정적 컨텐츠 vs 동적 컨텐츠"},"frontmatter":{"draft":false},"rawBody":"정적인 컨텐츠와 동적인 컨텐츠라는 말을 보곤한다. 보통 html, css, js, image, font 처럼 자주 변하지 않고 어디 캐싱해둘만한 데이터를 정적 파일이라 한다.\n\n반면에 자주 변하는-아마도 DB 같은 곳에 저장되서- 추가, 수정, 삭제가 빈번한 데이터를 동적인 데이터라 한다."},{"fields":{"slug":"/집합 Set/","title":"집합 Set"},"frontmatter":{"draft":false},"rawBody":"수학에서는 서로 구분되는 유일한 원소들의 모임으로 정의한다.\n\n수학의 집합 개념을 빌려와서, 컴퓨터에서는 item의 [[유일성 Unique]]을 보장하는 [[자료구조 Data Structure]]의 이름이기도 하다. 보통은 [[해시 Hash]]함수를 이용해 구현한다."},{"fields":{"slug":"/집합론 Set Theory/","title":"집합론 Set Theory"},"frontmatter":{"draft":false},"rawBody":"서로 구분가능한 원소들의 모임인 [[집합 Set]]을 연구하는 수학의 분과."},{"fields":{"slug":"/동기면담 Motivational Interviewing/","title":"동기면담 Motivational Interviewing"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/동시성 Concurrency/","title":"동시성 Concurrency"},"frontmatter":{"draft":false},"rawBody":""},{"fields":{"slug":"/카프카 Kafka/","title":"카프카 Kafka"},"frontmatter":{"draft":false},"rawBody":"이벤트... 중개자???"},{"fields":{"slug":"/캐패시터 Capacitor/","title":"캐패시터 Capacitor"},"frontmatter":{"draft":false},"rawBody":"[공식 사이트](https://capacitorjs.com)\n[공식 트위터](https://twitter.com/capacitorjs)\n\n[[모바일 Mobile]], [[데스크탑 Desktop]], [[점진적 웹 애플리케이션 PWA]] 환경에서 돌아가는 웹 앱을 만들 수 있게 도와주는 [[프레임워크 Framework]]. [[웹 뷰 Web View]]에 [[파일 시스템 File System]] 같은 플랫폼 [[API Application Programming Interface|API]]를 [[Wrapping|감싸서]] 제공한다. [[리액트 React]] 같은 [[단일 페이지 애플리케이션 SPA|SPA]] 프레임워크를 이용해서 [[애플리케이션 Application]]을 만들 수 있다.\n\n[[웹이 UI의 표준이 되어간다]]는 트렌드를 보여주는 예시다."},{"fields":{"slug":"/커맨드라인 Command Line/","title":"커맨드라인 Command Line"},"frontmatter":{"draft":false},"rawBody":"[[인터페이스 Interface]]\n\n[_Data Science at the Command Line_ for free](https://datascienceatthecommandline.com/2e/)\n\n[[리눅스 Linux]] 커맨드라인이 특히 유명하다\n"},{"fields":{"slug":"/컴파일 Compile/","title":"컴파일 Compile"},"frontmatter":{"draft":false},"rawBody":"특정 [[프로그래밍 언어 Programming Language]]로 된 프로그램을 다른 언어로 번역하는 일.\n\n특히 c같은 [[고급 언어 High Level Language]]를  기계어나, 바이트코드, WASM 같이 기계에 더 가까운 [[저수준]] 언어로 변환해두는 과정을 컴파일이라 한다.\n\nTypescrpit나 Rescript, Elm 같은 언어를 js로 변환하거나, 신 버전 js를 구 버전 js 로 변환하는 일도 컴파일인데. 이는 **트랜스파일**이라고 부르기도 한다.\n\n컴파일할 원본 코드를 보통 [[소스 코드 source code]]라고 부른다."},{"fields":{"slug":"/컴퓨터 프로그램의 구조와 해석 SICP/","title":"컴퓨터 프로그램의 구조와 해석 SICP"},"frontmatter":{"draft":false},"rawBody":"[full text](https://mitpress.mit.edu/sites/default/files/sicp/index.html)\n"},{"fields":{"slug":"/키-값 key-value/","title":"키-값 Key-Value"},"frontmatter":{"draft":false},"rawBody":"어떤 키를 가지고 대응되는 값을 연결하는 구조.\n\n여러 언어에 구현된 [[자료구조 Data Structure|자료구조]]인 [[맵 Map]]이 대표적이다. [[해시 Hash]]나 [[트리 Tree]] 등을 이용해 구현한다.\n\n세상에는 정말 많은 데이터들을 key-value로 저장한다.\n\n브라우저의 localStorage도 대표적인 key-value 저장소다.\n[[자바스크립트 Javascript|JS]]의 object나 이를 [[직렬화 Serialize]]한 [[JSON JavaScript Object Notation|JSON]]도 key-value로 데이터를 저장한다.\n[[레디스 Redis]] 같은 key-value [[데이터베이스 Database]]도 있다.\n\nkey-value는 이런저런 [[캐싱 caching]]이나 [[인덱스 Index]]로 사용되기도 한다. key-value 저장소는 구조도 간단하고, 성능도 빠르기 때문이다. 이를 이용해 한 번 계산했던 값을 저장해두는 [[메모이제이션 Memoization]] [[알고리즘 Algorithm]]도 있다."},{"fields":{"slug":"/타우리 Tauri/","title":"타우리 Tauri"},"frontmatter":{"draft":false},"rawBody":"[[러스트 Rust]]로 만든 [[일렉트론 Electron]] 대체제. [[컴파일 언어를 이용해서 다시 만드는 트렌드]]의 사례다. [[웹 뷰 Web View]]를 이용해서 [[데스크탑 Desktop]] 앱을 만들 수 있게 도와준다. [[명시적으로 허용하지 않은 기능은 사용할 수 없다]]는 깐깐한 [[보안 Security]] 정책을 자랑한다.\n"},{"fields":{"slug":"/템플릿 엔진 Template Engine/","title":"템플릿 엔진 Template Engine"},"frontmatter":{"draft":false},"rawBody":"[[정적 컨텐츠 vs 동적 컨텐츠|정적]]인 템플릿에 동적으로 데이터를 채워넣어 html을 생성할 수 있는 도구\n"},{"fields":{"slug":"/파이썬 Python/","title":"파이썬 Python"},"frontmatter":{"draft":false},"rawBody":"귀도 반 로섬이 만든 간결하고 직관적인 [[정적 타입 vs 동적 타입|동적 타입]] [[인터프리터 Interpreter]] [[프로그래밍 언어 Programming Language|언어]] C를 이용해 만들었기 때문에, C를 이용해서 라이브러리를 만들고 연동하는 경우가 많다."},{"fields":{"slug":"/프런트엔드 TDD/","title":"프런트엔드 TDD"},"frontmatter":{"draft":false},"rawBody":"토끼가 쓰려는 책\n\n"},{"fields":{"slug":"/프로그래머의 허리 건강을 위하여/","title":"프로그래머의 허리 건강을 위하여"},"frontmatter":{"draft":false},"rawBody":"[[운동]]을 올바르게 꾸준히 하고. [[자세]]를 바르게 해야한다는 건 누구나 알지만. 제대로 실천하는 사람은 거의 없다."},{"fields":{"slug":"/프로젝트/","title":"프로젝트"},"frontmatter":{"draft":false},"rawBody":"## 직장인으로 일한다\n- 테스트 개선\n\n## 몸과 마음을 챙긴다\n- 바른 자세\n- 씻기\n- 산책 x 링피트\n\n## 더 즐겁게 가치를 전할 수 있도록 돕는다\n- 프런트엔드 하드 트레이닝\n- 백엔드 하드 트레이닝\n\n- 프레임워크에 상관 없이 [[프런트엔드 TDD]]\n- 블로그에 글을 쓰고, 책을 쓴다\n- 튜토리얼을 만든다\n\n## 도전하고 배운다\n- [[액터 모델 Actor Model]], [[함수형 Functional]], [[객체지향 Object Oriented]]\n- GraphDB, GraphQL, Network\n- 진리의 배\n- 데이터 과학, 통계, 과학철학, 민주주의\n- 인식론, 과학철학, 논리학, 수학"},{"fields":{"slug":"/철학과를 나온 개발자는 현명하다는 편견/","title":"철학과를 나온 개발자는 현명하다는 편견"},"frontmatter":{"draft":false},"rawBody":"나는 철학과를 나온 개발자는 현명하다는 편견이 있다.\nvim에 빠지신 [[기계인간 John Grib]] 님이나, 접근성과 테스트에 진심이신 [[류성두 Sungdoo Yoo]] 같은 분들이 있다. 이 편견을 검증하기 위해서 사례를 더 수집하고 있다.\n\n무엇보다 두 분 다 사랑꾼이신데. [[나는 사랑하는 사람을 좋아한다]]."},{"fields":{"slug":"/하스켈 Haskell/","title":"하스켈 Haskell"},"frontmatter":{"draft":false},"rawBody":"[[부수효과 Side Effect|부수효과]]를 최대한 밖으로 밀어내는 [[강타입 Strongly Typed|강타입]] 순수 [[함수형 Functional|함수형]] [[프로그래밍 언어 Programming Language|프로그래밍 언어]].\n\n함수형의 기초를 닦은 [[하스켈 브룩스 커리 Haskell Brooks Curry|하스켈 브룩스 커리]]의 이름에서 따왔다. 학자들이 모여서 만든 언어 답게 수학과 논리학의 개념을 대거 차용했고, 다른 많은 언어에 영향을 주었다.\n\n하스켈의 장점은 (나도 잘 모르지만) [[힌들리 밀너 추론]]에 기반한 강력한 타입 시스템이라고들 한다. 코드를 보면 수식이랑 비슷하게도 보이는데 이는 우연이 아니다. [[모나드 Monad]] 나 [[펑터 Functor]] 같은 개념도 [[범주론 Category Theory]]에서 들어왔다. "},{"fields":{"slug":"/함수형 Functional/","title":"함수형 Functional"},"frontmatter":{"draft":false},"rawBody":"[[순수 함수 Pure Function]]를 [[합성 Composition]]하여 개발하는 방식. [[부수효과 Side Effect]]"},{"fields":{"slug":"/placeholder/","title":"This Is a Placeholder File for Mdx"},"frontmatter":{"draft":true},"rawBody":"---\ntitle: This Is a Placeholder File for Mdx\ndraft: true\ntags:\n  - gatsby-theme-primer-wiki-placeholder\n---\n"}]}}}